{"version":3,"sources":["components/TaskForm.js","components/TaskControlSearch.js","components/TaskControl.js","components/TaskControlSort.js","components/TaskItem.js","components/TaskList.js","App.js","index.js"],"names":["TaskForm","props","onCloseForm","event","onChange","target","name","value","setState","onSubmit","preventDefault","state","onClear","status","id","this","task","nextProps","className","onClick","type","Component","TaskControlSearch","onSearch","keyword","placeholder","TaskControl","TaskItem","onUpdateStatus","onDelete","onUpdate","index","TaskList","onFilter","filterName","filterStatus","tasks","elmTasks","map","App","onToggleForm","isDisplayForm","taskEditing","onShowForm","data","generateID","push","findIndex","localStorage","setItem","JSON","stringify","result","forEach","splice","parseInt","filter","toLowerCase","sort","by","getItem","parse","Math","floor","random","toString","substring","s4","indexOf","elmTaskForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8eb03c8f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TaskForm extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tid : '',\r\n\t\t\tname : '',\r\n\t\t\tstatus : false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tif(this.props.task){\r\n\t\t\tthis.setState({\r\n\t\t\t\tid : this.props.task.id,\r\n\t\t\t\tname : this.props.task.name,\r\n\t\t\t\tstatus : this.props.task.status\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps){\r\n\t\tif(nextProps && nextProps.task){\r\n\t\t\tthis.setState({\r\n\t\t\t\tid : nextProps.task.id,\r\n\t\t\t\tname : nextProps.task.name,\r\n\t\t\t\tstatus : nextProps.task.status\r\n\t\t\t});\r\n\t\t}else if(!nextProps.task){\r\n\t\t\tthis.setState({\r\n\t\t\t\tid : '',\r\n\t\t\t\tname : '',\r\n\t\t\t\tstatus : false\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tonCloseForm = (event) => {\r\n\t\tthis.props.onCloseForm();\r\n\t}\r\n\r\n\tonChange = (event) => {\r\n\t\tvar target = event.target;\r\n\t\tvar name = target.name;\r\n\t\tvar value = target.value;\r\n\t\tif(name === 'status') {\r\n\t\t\tvalue = target.value === 'true' ? true : false;\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\t[name] : value\r\n\t\t});\r\n\t}\r\n\r\n\tonSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.onSubmit(this.state);\r\n\t\t//Clear and Close form\r\n\t\tthis.onClear();\r\n\t\tthis.onCloseForm();\r\n\t}\r\n\r\n\tonClear = () => {\r\n\t\tthis.setState({\r\n\t\t\tname : '',\r\n\t\t\tstatus : false\r\n\t\t});\r\n\t}\r\n\r\n    render() {\r\n    \tvar {id} = this.state;\r\n        return (\r\n\t\t\t<div className=\"panel panel-warning\">\r\n\t\t\t\t<div className=\"panel-heading\">\r\n\t\t\t\t\t<h3 className=\"panel-title\">\r\n\t\t\t\t\t\t{id !== '' ? 'Update task' : 'Add task'}\r\n\t\t\t\t\t\t<span \r\n\t\t\t\t\t\t\tclassName=\"fa fa-times-circle text-right\" \r\n\t\t\t\t\t\t\tonClick={this.onCloseForm}\r\n\t\t\t\t\t\t></span>\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"panel-body\">\r\n\t\t\t\t   <form onSubmit={this.onSubmit} >\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<label>Name:</label>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\tclassName=\"form-control\" \r\n\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<label>Status:</label>\r\n\t\t\t\t\t\t<select \r\n\t\t\t\t\t\t\tclassName=\"form-control\" \r\n\t\t\t\t\t\t\tname=\"status\"\r\n\t\t\t\t\t\t\tvalue={this.state.status}\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value={true} >Active</option>\r\n\t\t\t\t\t\t\t<option value={false} >Hide</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-warning\">\r\n\t\t\t\t\t\t\t<span className=\"fa fa-plus mr-5\"></span>Submit\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\t\ttype=\"button\" \r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\t\t\t\t\tonClick={this.onClear}\r\n\t\t\t\t\t\t\t><span className=\"fa fa-close mr-5\"></span>Clear\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t   </form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskForm;","import React, { Component } from 'react';\r\n\r\nclass TaskControlSearch extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tkeyword : ''\r\n\t\t}\r\n\t}\r\n\r\n\tonChange = (event)=>{\r\n\t\tvar target = event.target;\r\n\t\tvar name = target.name;\r\n\t\tvar value = target.value;\r\n\t\tthis.setState({\r\n\t\t\t[name] : value\r\n\t\t});\r\n\t}\r\n\r\n\tonSearch = ()=>{\r\n\t\tthis.props.onSearch(this.state.keyword);\r\n\t}\r\n\r\n    render() {\r\n    \tvar {keyword} = this.state;\r\n        return (\r\n\t\t\t<div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n\t\t\t\t<div className=\"input-group\">\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\tname=\"keyword\" \r\n\t\t\t\t\t\tclassName=\"form-control\" \r\n\t\t\t\t\t\tplaceholder='Enter key word...' \r\n\t\t\t\t\t\tvalue={keyword}\r\n\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span className=\"input-group-btn\">\r\n\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\ttype=\"button\" \r\n\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t\t\tonClick={this.onSearch}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t      <span className=\"fa fa-search mr-5\"></span>Search\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>  \r\n\t\t\t</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskControlSearch;","import React, { Component } from 'react';\r\nimport TaskControlSearch from './TaskControlSearch';\r\nimport TaskControlSort from './TaskControlSort';\r\n\r\nclass TaskControl extends Component {\r\n\r\n    render() {\r\n        return (\r\n\t\t\t<div className=\"row mt-15\">\r\n\t\t\t{/* Search*/}\r\n\t\t\t\t<TaskControlSearch onSearch={this.props.onSearch} />\r\n\t\t\t{/*Sort*/}\r\n\t\t\t\t{/*<TaskControlSort />*/}\r\n\t\t\t</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskControl;","import React, { Component } from 'react';\r\n\r\nclass TaskControlSort extends Component {\r\n\r\n    render() {\r\n        return (\r\n\t\t\t<div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName=\"btn btn-primary dropdown-toggle\" \r\n\t\t\t\t\t\ttype=\"button\" \r\n\t\t\t\t\t\tid=\"dropdownMenu1\" \r\n\t\t\t\t\t\tdata-toggle=\"dropdown\" \r\n\t\t\t\t\t\taria-haspopup=\"true\" \r\n\t\t\t\t\t\taria-expanded=\"true\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSort <span className=\"fa fa-caret-square-o-down ml-5\"></span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\" >\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t    <a role=\"button\" className=\"sort_selected\">\r\n\t\t\t\t\t\t        <span className=\"fa fa-sort-alpha-asc pr-5\">\r\n\t\t\t\t\t\t        \tName A-Z\r\n\t\t\t\t\t\t        </span>\r\n\t\t\t\t\t\t    </a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t    <a role=\"button\">\r\n\t\t\t\t\t\t        <span className=\"fa fa-sort-alpha-desc pr-5\">\r\n\t\t\t\t\t\t        \tName Z-A\r\n\t\t\t\t\t\t        </span>\r\n\t\t\t\t\t\t    </a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li role=\"seperator\" className=\"divider\"></li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<a role=\"button\">\r\n\t\t\t\t\t\t\t\tActive status\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<a role=\"button\">\r\n\t\t\t\t\t\t\t\tHide status\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div> \r\n\t\t\t</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskControlSort;","import React, { Component } from 'react';\r\n\r\nclass TaskItem extends Component {\r\n\r\n    onUpdateStatus = () => {\r\n        this.props.onUpdateStatus(this.props.task.id)\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.props.onDelete(this.props.task.id);\r\n    }\r\n\r\n    onUpdate = () => {\r\n        this.props.onUpdate(this.props.task.id);\r\n    }\r\n\r\n    render() {\r\n        var {task, index} = this.props;\r\n        return (\r\n            <tr>\r\n                <td>{index}</td>\r\n                <td>{task.name}</td>\r\n                <td className=\"text-center\">\r\n                    <span \r\n                        className={task.status === true ? 'label label-danger':'label label-success'}\r\n                        onClick={this.onUpdateStatus}\r\n                    >\r\n                        {task.status === true ? 'Active':'Hide'}\r\n                    </span>\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-warning\"\r\n                        onClick={this.onUpdate}\r\n                    >\r\n                        <span className=\"fa fa-pencil mr-5\"></span>Edit\r\n                    </button>\r\n                    &nbsp;\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-danger\"\r\n                        onClick={this.onDelete}\r\n                    >\r\n                        <span className=\"fa fa-trash mr-5\"></span>Delete\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskItem;","import React, { Component } from 'react';\r\nimport TaskItem from './TaskItem';\r\n\r\nclass TaskList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            filterName : '',\r\n            filterStatus : -1 //all:-1, active:1, hide:0\r\n        }\r\n    }\r\n\r\n    onChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.props.onFilter(\r\n            name === 'filterName' ? value : this.state.filterName,\r\n            name === 'filterStatus' ? value : this.state.filterStatus\r\n        )\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var {tasks} = this.props;\r\n        var {filterName, filterStatus} = this.state;\r\n        var elmTasks = tasks.map((task, index) => {\r\n            return <TaskItem \r\n                        key={task.id} \r\n                        index={index} \r\n                        task={task} \r\n                        onUpdateStatus={this.props.onUpdateStatus}\r\n                        onDelete={this.props.onDelete}\r\n                        onUpdate={this.props.onUpdate}\r\n                    />\r\n        });\r\n        return (\r\n            <table className=\"table table-borderd table-hover mt-15\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"text-center\" >No.</th>\r\n                        <th className=\"text-center\">Name</th>\r\n                        <th className=\"text-center\">Status</th>\r\n                        <th className=\"text-center\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n             <tbody>\r\n                <tr>\r\n                    <td></td>\r\n                    <td>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            name=\"filterName\"\r\n                            value={filterName}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <select \r\n                            className=\"form-control\"\r\n                            name=\"filterStatus\"\r\n                            value={filterStatus}\r\n                            onChange={this.onChange}\r\n                        >\r\n                            <option value=\"-1\">All</option>\r\n                            <option value=\"0\">Hide</option>\r\n                            <option value=\"1\">Active</option>\r\n                        </select>\r\n                    </td>\r\n                    <td></td>\r\n                </tr>\r\n                {elmTasks}\r\n             </tbody>\r\n            </table>  \r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskList;","import React, { Component } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport TaskList from './components/TaskList';\nimport './App.css';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks : [], //id, name, status\n            isDisplayForm : false,\n            taskEditing : null,\n            filter : {\n                name : '',\n                status : -1\n            },\n            keyword : '',\n            sort : {\n                by : 'name',\n                value : 1\n            }\n        }\n    }\n\n    componentWillMount(){\n        if(localStorage && localStorage.getItem('tasks')){\n            var tasks = JSON.parse(localStorage.getItem('tasks'));\n            this.setState({\n                tasks : tasks\n            });\n        }\n    }\n\n    /*onGenerateData = () => {\n        var tasks = [\n            {\n                id : this.generateID(),\n                name : 'Hoc lap trinh',\n                status : true\n            },\n            {\n                id : this.generateID(),\n                name : 'Xem anime',\n                status : false\n            },\n            {\n                id : this.generateID(),\n                name : 'Nghe nhac',\n                status : false\n            },\n        ];\n        this.setState({\n            tasks : tasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    }*/\n\n    s4(){\n        return Math.floor((1+Math.random()) * 0x10000).toString(16).substring(1);\n    }\n\n    generateID(){\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' +this.s4() + this.s4() + this.s4();\n    }\n\n    onToggleForm = (event) => {//Add task\n        if(this.state.isDisplayForm && this.state.taskEditing !== null){\n            this.setState({\n                isDisplayForm : true,\n                taskEditing : null\n            });\n        }else{\n            this.setState({\n                isDisplayForm : !this.state.isDisplayForm,\n                taskEditing : null\n            });\n        }\n    }\n\n    onCloseForm = (event) => {\n        this.setState({\n            isDisplayForm : false\n        });\n    }\n\n    onShowForm = (event) => {\n        this.setState({\n            isDisplayForm : true\n        });\n    }\n\n    onSubmit = (data) => {\n        var {tasks} = this.state;\n        if(data.id === ''){\n            data.id = this.generateID();\n            tasks.push(data);\n        }else{\n            //Editing\n            var index = this.findIndex(data.id);\n            tasks[index] = data;\n        }\n        this.setState({\n            tasks : tasks,\n            taskEditing : null\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n\n    onUpdateStatus = (id) => {\n        var {tasks} = this.state;\n        var index = this.findIndex(id);\n        if(index !== -1) {\n            tasks[index].status = ! tasks[index].status;\n            this.setState({\n                task : tasks\n            });\n            localStorage.setItem('tasks', JSON.stringify(tasks));\n        }\n    }\n\n    findIndex = (id) => {\n        var {tasks} = this.state;\n        var result = -1;\n        tasks.forEach((task, index) => {\n            if(task.id === id) {\n                result = index;\n            }\n        });\n        return result;\n    }\n\n    onDelete = (id) => {\n        var {tasks} = this.state;\n        var index = this.findIndex(id);\n        if(index !== -1) {\n            tasks.splice(index, 1);\n            this.setState({\n                task : tasks\n            });\n            localStorage.setItem('tasks', JSON.stringify(tasks));\n        }\n        this.onCloseForm();\n    }\n\n    onUpdate = (id) => {\n        var {tasks} = this.state;\n        var index = this.findIndex(id);\n        var taskEditing = tasks[index];\n        this.setState({\n            taskEditing : taskEditing\n        });\n        this.onShowForm();\n    }\n\n    onFilter = (filterName, filterStatus) => {\n        filterStatus = parseInt(filterStatus, 10);\n        this.setState({\n            filter : {\n                name : filterName.toLowerCase(),\n                status : filterStatus\n            }\n        });\n    }\n\n    onSearch = (keyword)=>{\n        this.setState({\n            keyword : keyword\n        });\n    }\n\n    render() {\n        var {tasks, isDisplayForm, taskEditing, filter, keyword    } = this.state; // var tasks = this.state.tasks;\n        if(filter){\n            if(filter.name){\n                tasks = tasks.filter((task)=>{\n                    return task.name.toLowerCase().indexOf(filter.name) !== -1;\n                });\n            }\n            tasks = tasks.filter((task)=>{\n                if(filter.status === -1){\n                    return task;\n                }else{\n                    return task.status === (filter.status === 1 ? true : false);\n                }\n            });\n        }\n        if(keyword){\n            tasks = tasks.filter((task)=>{\n                return task.name.toLowerCase().indexOf(keyword) !== -1;\n            });\n        }\n        var elmTaskForm = isDisplayForm \n            ?   <TaskForm \n                    onSubmit={this.onSubmit} \n                    onCloseForm={this.onCloseForm} \n                    task={taskEditing}\n                /> : '';\n        return (\n            <div className=\"container-fluid m-50\">\n                <div className=\"text-center\">\n                   <h1>TASK MANAGER</h1>\n                   <br/>\n                </div>\n                <div className=\"row\">\n                    <div className= {isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : ''} >\n                        {/*Form*/}\n                        {elmTaskForm}\n                    </div>\n                   <div className= {isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"} >\n                        <button \n                            type=\"button\" \n                            className=\"btn btn-primary\"\n                            onClick={this.onToggleForm}\n                        >\n                            <span className=\"fa fa-plus mr-5\"></span>\n                            Add task\n                        </button>&nbsp;\n                        {/*<button \n                            type=\"button\" \n                            className=\"btn btn-danger\"\n                            onClick={this.onGenerateData}\n                        >\n                            Generate data\n                        </button>*/}\n                        {/*Search-Sort*/}\n                        <TaskControl onSearch={this.onSearch} />\n                        {/* List*/}\n                        <TaskList \n                            tasks={tasks} \n                            onUpdateStatus = {this.onUpdateStatus} \n                            onDelete={this.onDelete}\n                            onUpdate={this.onUpdate}\n                            onFilter={this.onFilter}\n                        />\n                   </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('content'));\n\n"],"sourceRoot":""}